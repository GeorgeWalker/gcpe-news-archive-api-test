// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.News.Archive.Api
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface IClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Archive>>> ApiArchivesGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='newArchive'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Archive>> ApiArchivesPostWithHttpMessagesAsync(Archive newArchive = default(Archive), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='timestamp'>
        /// </param>
        /// <param name='machine'>
        /// </param>
        /// <param name='pid'>
        /// </param>
        /// <param name='increment'>
        /// </param>
        /// <param name='creationTime'>
        /// </param>
        /// <param name='archiveId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Archive>> ApiArchivesByArchiveIdGetWithHttpMessagesAsync(int timestamp, int machine, int pid, int increment, System.DateTimeOffset creationTime, string archiveId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='secret'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> ApiAuthenticationTokenGetWithHttpMessagesAsync(string secret = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Collection>>> ApiCollectionsGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='timestamp'>
        /// </param>
        /// <param name='machine'>
        /// </param>
        /// <param name='pid'>
        /// </param>
        /// <param name='increment'>
        /// </param>
        /// <param name='creationTime'>
        /// </param>
        /// <param name='collectionId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Archive>>> ApiCollectionsByCollectionIdArchivesGetWithHttpMessagesAsync(int timestamp, int machine, int pid, int increment, System.DateTimeOffset creationTime, string collectionId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='indexName'>
        /// </param>
        /// <param name='timestamp'>
        /// </param>
        /// <param name='machine'>
        /// </param>
        /// <param name='pid'>
        /// </param>
        /// <param name='increment'>
        /// </param>
        /// <param name='creationTime'>
        /// </param>
        /// <param name='documentId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<bool?>> ApiIndexByIndexNameAddByDocumentIdGetWithHttpMessagesAsync(string indexName, int timestamp, int machine, int pid, int increment, System.DateTimeOffset creationTime, string documentId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
